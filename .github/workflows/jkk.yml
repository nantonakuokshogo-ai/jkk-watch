# .github/workflows/jkik.yml
name: JKK Monitor

on:
  workflow_dispatch:
    inputs:
      top_url:
        description: 'Override JKK top URL (optional)'
        required: false
      start_url:
        description: 'Override JKK startinit URL (optional)'
        required: false
  # JST 06:30（UTC 21:30）
  schedule:
    - cron: '30 21 * * *'

permissions:
  contents: read

concurrency:
  group: jkk-monitor
  cancel-in-progress: true

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      CI: 'true'
      PUPPETEER_SKIP_DOWNLOAD: 'false'
      JKK_TOP_URL: ${{ github.event.inputs.top_url }}
      JKK_START_URL: ${{ github.event.inputs.start_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          # lockfileが無いので cache は使わない
          # cache: 'npm'

      - name: Show base image
        shell: bash
        run: |
          uname -a
          . /etc/os-release
          echo "Image: $PRETTY_NAME"

      - name: Install system libs (Jammy/Noble portable v3)
        shell: bash
        run: |
          set -euxo pipefail
          sudo apt-get update

          # 最初に存在したものを選ぶヘルパ
          choose() {
            for n in "$@"; do
              if apt-cache show "$n" >/dev/null 2>&1; then
                echo "$n"
                return 0
              fi
            done
            return 1
          }

          PKGS=(
            ca-certificates
            fonts-liberation
            libatk-bridge2.0-0
            libatk1.0-0
            "$(choose libcups2t64 libcups2 || true)"
            libdbus-1-3
            libdrm2
            libgbm1
            libglib2.0-0
            libgtk-3-0
            libnspr4
            libnss3
            libx11-6
            libx11-xcb1
            libxcb1
            libxcomposite1
            libxcursor1
            libxdamage1
            libxext6
            libxfixes3
            libxkbcommon0
            libxrandr2
            libxrender1
            libxshmfence1
            libpango-1.0-0
            libpangocairo-1.0-0
            "$(choose libasound2t64 libasound2 || true)"
          )

          # 空要素を除去
          INSTALL=()
          for p in "${PKGS[@]}"; do
            if [ -n "$p" ]; then INSTALL+=("$p"); fi
          done

          if [ ${#INSTALL[@]} -gt 0 ]; then
            sudo apt-get install -y --no-install-recommends "${INSTALL[@]}"
          fi

      - name: Install dependencies
        run: npm i

      - name: Show versions
        run: |
          node -v
          npm -v
          npx puppeteer browsers || true

      - name: Run monitor
        run: |
          mkdir -p out
          node monitor.mjs || echo "monitor exited with code $?"

      - name: Upload artifacts (out/)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jkk-out-${{ github.run_id }}
          path: |
            out/**
            package.json
            monitor.mjs
          retention-days: 14
